trigger:
- none

pool:
  vmImage: 'macos-latest'

jobs:
- job: mobileLocalTest
  steps:
    - script: npm install
      displayName: 'NPM Install Dependencies'

    - script: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;x86'
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-29;google_apis;x86' --force --device 'Nexus 6'
        nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -no-cache -no-snapshot -wipe-data -no-audio -no-boot-anim -accel auto -gpu auto > /dev/null 2>&1 &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        adb devices
        echo "Installing app..."
        adb -s emulator-5554 install ./app/"$(ls ./app/)"
        echo "Starting app..."
        adb shell am start -n com.icbc.mobile.abroadARG.test/com.wdiodemoapp.SplashActivity
        echo "Waiting..."
        sleep 60
      displayName: 'Setup Android Emulator'

    - script: npm run start-mobile
      displayName: 'Start Automated Tests'

    - script: |
        npm run clean-report
      condition: always()
      displayName: 'Create Allure Report'

    - task: ArchiveFiles@2
      displayName: 'Compress Allure Report'
      condition: always()
      inputs:
        rootFolderOrFile: 'allure-report'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: 'allure-report/allure-report.zip'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Allure Report'
      condition: always()
      inputs:
        targetPath: 'allure-report/allure-report.zip'
        artifactName: allure-report-mobile

    - task: PublishTestResults@2
      displayName: 'JUnit Report'
      condition: always()
      inputs:
        testResultsFormat: "JUnit"
        testResultsFiles: "results*.xml"
        searchFolder: "./junit-results"
        failTaskOnFailedTests: true
